plugins {
	id 'java'
	id 'org.springframework.boot' version '3.3.2'
	id 'io.spring.dependency-management' version '1.1.6'
}

group = 'com.itwill'
version = '0.0.1-SNAPSHOT' // '1.0-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(21)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	
	// Lombok --------------->
	compileOnly 'org.projectlombok:lombok'
	testCompileOnly 'org.projectlombok:lombok' // Gradle Tasks에서 bulid --> Run Gradle Tasks할 때 오류나서 추가.
	annotationProcessor 'org.projectlombok:lombok'
	testAnnotationProcessor 'org.projectlombok:lombok' // Gradle Tasks에서 bulid --> Run Gradle Tasks할 때 오류나서 추가. 
	// <--------------------
	
	// Spring Security ----->
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.thymeleaf.extras:thymeleaf-extras-springsecurity6'
	testImplementation 'org.springframework.security:spring-security-test'
	// <--------------------
	
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	runtimeOnly 'com.oracle.database.jdbc:ojdbc11'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
	
	// Querydsl ---------->
	implementation 'com.querydsl:querydsl-jpa:5.0.0:jakarta'
    annotationProcessor 'com.querydsl:querydsl-apt:5.0.0:jakarta'
    annotationProcessor 'jakarta.annotation:jakarta.annotation-api'
    annotationProcessor 'jakarta.persistence:jakarta.persistence-api'
	// <--------------------
	 
	// 프로젝트 > Gradle > Refresh Gradle Project. 
	// 1) Gradle Tasks > clean > Run Gradle Tasks 
	// 2)Gradle Tasks > build > Run Gradle Tasks
}

tasks.named('test') {
	useJUnitPlatform()
}

// Querydsl 관련 빌드 옵션 -------------------->
def querydslDir = "$buildDir/generated/querydsl"

sourceSets {
    main.java.srcDirs += [ querydslDir ]
}

tasks.withType(JavaCompile) {
    options.annotationProcessorGeneratedSourcesDirectory = file(querydslDir)
}

clean.doLast {
    file(querydslDir).deleteDir()
}
// <---------------------------------------------
