<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.itwill.spring2.repository.PostDao">
    
    <!-- posts 테이블 전체 검색 >> 목록보기 -->
    <select id="selectOrderByIdDesc" resultType="Post"> 
        select * from posts order by id desc
    </select>
    
    <!-- posts 테이블에서 id(PK)로 검색 >> 상세보기 -->
    <select id="selectById" resultType="Post"> <!-- 테이블에 따라 resultType이 달라진다. -->
        select * from posts where id = #{id}
    </select>
    
    <!-- posts 테이블에 행 삽입 >> 새 글 작성 -->
    <insert id="insertPost"> <!-- resultType이 int이므로 지정할 필요가 없다. -->
        insert into posts (title, content, author) values (#{title}, #{content}, #{author})
    </insert>
    
    <!-- posts 테이블에서 해당 id의 제목과 내용 업데이트 -->
    <update id="updatePost">
        update posts 
        set title = #{title}, content = #{content}, modified_time = systimestamp
        where id = #{id}
    </update>
    
    <!-- posts 테이블에서 해당 id의 행 삭제 -->
    <delete id="deletePost">
        delete from posts where id = #{id}
    </delete>
    
    <!-- posts 테이블에서 제목/내용/작성자로 검색. <choose> & <when> 이용 
        (조건에 따라 SQL 문장이 달라지는 경우: 동적 쿼리)-->
    <select id="search" resultType="Post">
        <bind name="searchKeyword" value="'%' + keyword + '%'" /> <!-- searchKeyword에는 '%' + keyword + '%'를 넣어서 묶어라.  -->
        select * from posts 
        <where>
            <choose>
                <when test='category.equals("t")'>
                    upper(title) like upper( #{searchKeyword} )
                </when>
                <when test='category.equals("c")'>
                    upper(content) like upper( #{searchKeyword} )
                </when>
                <when test='category.equals("tc")'>
                    upper(title) like upper( #{searchKeyword} )
                    or
                    upper(content) like upper( #{searchKeyword} )
                </when>
                <when test='category.equals("a")'>
                    upper(author) like upper( #{searchKeyword} )
                </when>
            </choose>
        </where> 
        order by id desc
    </select>
    
</mapper>